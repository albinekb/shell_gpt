[tool.poetry]
name = "shell_gpt"
version = "0.1.0"  # Adjust this as needed
description = "A command-line productivity tool powered by large language models, will help you accomplish your tasks faster and more efficiently."
authors = ["Farkhod Sadykov <farkhod@sadykov.dev>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/ther1d/shell_gpt"
repository = "https://github.com/ther1d/shell_gpt"
documentation = "https://github.com/TheR1D/shell_gpt/blob/main/README.md"
keywords = ["shell", "gpt", "openai", "ollama", "cli", "productivity", "cheet-sheet"]
classifiers = [
    "Operating System :: OS Independent",
    "Topic :: Software Development",
    "License :: OSI Approved :: MIT License",
    "Intended Audience :: Information Technology",
    "Intended Audience :: System Administrators",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3.11"
]

[tool.poetry.dependencies]
python = ">=3.11,<4.0"
openai = ">=1.34.0,<2.0.0"
typer = ">=0.7.0,<1.0.0"
click = ">=7.1.1,<9.0.0"
rich = ">=13.1.0,<14.0.0"
distro = ">=1.8.0,<2.0.0"
instructor = ">=0.4.5,<1.0.0"
pyreadline3 = { version = ">=3.4.1,<4.0.0", platform = "win32" }
appscript = ">=1.0.0,<2.0.0"
litellm = "==1.42.5"
pytest = ">=7.2.2,<8.0.0"
requests-mock = { version = ">=1.10.0,<2.0.0", extras = ["fixture"] }
isort = ">=5.12.0,<6.0.0"
black = "==23.1.0"
mypy = "==1.1.1"
types-requests = "==2.28.11.17"
codespell = ">=2.2.5,<3.0.0"
ruff = "==0.0.256"
pre-commit = ">=3.1.1,<4.0.0"
google-generativeai = "^0.7.2"

[tool.poetry.extras]
litellm = ["litellm"]
test = ["pytest", "requests-mock", "isort", "black", "mypy", "types-requests", "codespell"]
dev = ["ruff", "pre-commit"]

[tool.poetry.scripts]
sgpt = "sgpt:cli"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
profile = "black"
skip = ["__init__.py"]

[tool.mypy]
strict = true
exclude = ["llm_functions"]

[tool.ruff]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "C",  # flake8-comprehensions
    "B"   # flake8-bugbear
]
ignore = [
    "E501", # line too long, handled by black
    "C901", # too complex
    "B008", # do not perform function calls in argument defaults
    "E731"  # do not assign a lambda expression, use a def
]

[tool.codespell]
skip = [".git", "venv"]